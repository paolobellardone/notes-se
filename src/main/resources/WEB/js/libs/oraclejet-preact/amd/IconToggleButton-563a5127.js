define(['exports', 'preact/jsx-runtime', 'preact', 'preact/compat', 'preact/hooks', './BaseButton-83ce1d00', './useToggleAction-59741954', './useTooltip-e965a559', './useTooltipControlled-18271c7a', './mergeProps-bcfa6a92', './toggleButtonUtils-e01582ef', './buttonUtils-20d1b249', './ToggleButtonLabel-cb67a3ce'], (function(e,t,o,s,i,l,a,n,r,c,d,g,u){"use strict";const p=s.forwardRef((({children:e,variant:s="outlined",size:r="md",isDisabled:p=!1,tooltip:b,accessibleLabel:T,isSelected:B=!1,onToggle:f,testId:m,"aria-describedby":v,width:h,...x},y)=>{const{globalEventProps:I}=g.processGlobals(x),D=i.useRef(null);i.useImperativeHandle(y,(()=>D.current),[D]);const{triggerProps:P}=a.useToggleAction({isDisabled:p,onToggle:f}),{tooltipContent:j,tooltipProps:w}=n.useTooltip({text:b??T,isDisabled:p}),A=d.toggleStyling("auto",B,!1,!1,"outlined"===s,void 0,void 0,!0),L={"aria-describedby":v};return t.jsxs(o.Fragment,{children:[t.jsx(l.BaseButton,{...c.mergeProps(w,P,I,L),variant:s,isDisabled:p,size:r,width:h,"aria-pressed":B,styling:A,ref:D,"aria-label":T??b,testId:m,children:t.jsx(u.ToggleButtonLabel,{onAction:()=>f?.({value:B}),isDisabled:p,display:"icons",startIcon:e})}),j]})}));p.displayName="IconToggleButton",e.IconToggleButton=p}));
//# sourceMappingURL=IconToggleButton-563a5127.js.map
