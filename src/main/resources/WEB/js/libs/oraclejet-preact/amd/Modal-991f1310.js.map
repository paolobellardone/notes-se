{"version":3,"file":"Modal-991f1310.js","sources":["../../src/UNSAFE_Modal/ModalBackdrop.tsx","../../src/UNSAFE_Modal/Modal.tsx","../../src/UNSAFE_Modal/ModalManager.ts"],"sourcesContent":["import { forwardRef, ForwardedRef } from 'preact/compat';\nimport { multiVariantStyles } from './themes/ModalStyles.css';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\n\ntype Props = IntrinsicProps & {\n  /**\n   * Specifies the backdrop is visible or transparent. Default is 'scrim' (visible).\n   */\n  variant?: 'scrim' | 'transparent';\n};\n\nconst ModalBackdrop = forwardRef<HTMLDivElement, Props>(\n  ({ variant = 'scrim' }, ref: ForwardedRef<HTMLDivElement | null>) => {\n    const variantClasses = multiVariantStyles({\n      backdrop: variant === 'transparent' ? 'transparent' : 'scrim'\n    });\n\n    return <div ref={ref} class={variantClasses} />;\n  }\n);\n\nexport default ModalBackdrop;\n","import { useEffect, useRef } from 'preact/compat';\nimport { useModal } from './hooks/useModal';\nimport { Layer } from '../UNSAFE_Layer';\nimport ModalBackdrop from './ModalBackdrop';\nimport ModalManager from './ModalManager';\nimport { baseStyle } from './themes/ModalStyles.css';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\n// Global ModalManager singleton instance\nconst globalModalManager = new ModalManager();\n\n/**\n * Returns an array of element's siblings.\n *\n * @param elem\n * @returns\n */\nfunction getSiblings(elem: Element): Element[] {\n  const siblings: Element[] = [];\n  let sibling = elem.previousSibling;\n  while (sibling != null) {\n    if (sibling.nodeType === 1) {\n      siblings.push(sibling as Element);\n    }\n    sibling = sibling.previousSibling;\n  }\n  sibling = elem.nextSibling;\n  while (sibling != null) {\n    if (sibling.nodeType === 1) {\n      siblings.push(sibling as Element);\n    }\n    sibling = sibling.nextSibling;\n  }\n  return siblings;\n}\n\n/**\n * Sets aria-hidden=true on Modal ancestors and siblings.\n *\n * @param modal\n * @returns An array of modified elements.\n */\nfunction setAriaHiddenOnBackgroundElements(modal: HTMLElement) {\n  if (!modal) {\n    return [];\n  }\n  const ariaHiddenElements: Element[] = [];\n  let node: Element | null = modal.parentElement as Element;\n\n  do {\n    if (!node) {\n      break;\n    }\n    const siblings = getSiblings(node);\n    siblings.forEach((elem: Element) => {\n      if (elem.tagName.toLowerCase() !== 'script' && elem.getAttribute('aria-hidden') !== 'true') {\n        ariaHiddenElements.push(elem);\n        elem.setAttribute('aria-hidden', 'true');\n      }\n    });\n    node = node.parentElement;\n  } while (node && node.tagName.toLowerCase() !== 'body');\n\n  return ariaHiddenElements;\n}\n\n/**\n * Resets the aria-hidden state on previously aria-hidden elements.\n *\n * @param elements\n */\nfunction resetAriaHiddenOnBackgroundElements(elements: Element[]) {\n  elements.forEach((elem) => {\n    elem.removeAttribute('aria-hidden');\n  });\n}\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\ntype UseModalProps = Parameters<typeof useModal>[0];\ntype Props = UseModalProps &\n  IntrinsicProps & {\n    /**\n     * Determines if the modal is active.\n     */\n    isOpen: boolean;\n    /**\n     * Specifies if modal backdrop is visible or transparent. Default is 'scrim' (visible).\n     */\n    backdropVariant?: 'scrim' | 'transparent';\n    /**\n     * A callback to be invoked when a click on the modal backdrop occurs.\n     */\n    onBackdropClick?: (event: MouseEvent) => void;\n  };\n\n/**\n * Modal is a low-level component that provides the 'modality' feature with built-in overlay (scrim).\n * It is typically used for building higher-level components (such as 'Dialog' or 'Popup') that need\n * to support modal behavior preventing interaction with the rest of the page while the modal is open.\n */\nconst Modal = ({ children, isOpen, onBackdropClick, backdropVariant }: Props) => {\n  // get the global ModalContext instance\n  const modalManager = globalModalManager;\n\n  const { backdropRef } = useModal({ isOpen, onBackdropClick });\n  // main modal element ref\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  const ariaHiddenCache = useRef<Element[] | null>(null);\n\n  // modal ref cache, required to lookup the item in modal manager when the actual ref is unmounted\n  const modal = useRef<{\n    modalRef?: typeof modalRef.current;\n  }>({});\n\n  // populates and returns the modal ref cache\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    return modal.current;\n  };\n\n  useEffect(() => {\n    if (isOpen && modalRef.current) {\n      modalManager?.push(getModal());\n    } else {\n      if (modal.current.modalRef) {\n        if (ariaHiddenCache.current !== null) {\n          resetAriaHiddenOnBackgroundElements(ariaHiddenCache.current);\n          ariaHiddenCache.current = null;\n        }\n        modalManager?.pop(getModal());\n      }\n    }\n  }, [isOpen, modalManager]);\n\n  useEffect(() => {\n    const modalRef = modal.current.modalRef;\n    return () => {\n      if (ariaHiddenCache.current !== null) {\n        resetAriaHiddenOnBackgroundElements(ariaHiddenCache.current);\n        ariaHiddenCache.current = null;\n      }\n      if (modalRef) {\n        modalManager?.pop(getModal());\n      }\n    };\n  }, [modalManager]);\n\n  const handleFocusIn = () => {\n    // on first focusin, set aria-hidden on modal ancestor's siblings and remember the modified elements\n    if (modalRef.current && ariaHiddenCache.current === null) {\n      ariaHiddenCache.current = setAriaHiddenOnBackgroundElements(modalRef.current);\n    }\n  };\n\n  return isOpen ? (\n    <Layer isModal={true}>\n      <div ref={modalRef} class={baseStyle} onFocus={handleFocusIn}>\n        <ModalBackdrop ref={backdropRef} variant={backdropVariant} />\n        {children}\n      </div>\n    </Layer>\n  ) : null;\n};\n\nexport default Modal;\n","import { focusWithin, allTabbableElements } from '../utils/PRIVATE_tabbableUtils';\nimport { isLogicalAncestor } from '../utils/UNSAFE_popupUtils';\n\ninterface Modal {\n  modalRef?: HTMLDivElement | null;\n}\n\n/**\n * CSS property backup type.\n */\ntype StyleBackup = Array<{\n  property: string;\n  value: string;\n}>;\n\nexport default class ModalManager {\n  /**\n   * Array of ModalDescriptors managed by ModalManager\n   */\n  private modals: Modal[];\n  /**\n   * Backup of the main container's (body) CSS props potentially altered by Modal.\n   */\n  private styleBackup: StyleBackup;\n  /**\n   * A flag indicating that the ModalManager's focus handler is installed\n   */\n  private isFocusHandlerActive = false;\n\n  constructor() {\n    this.modals = [];\n    this.styleBackup = [];\n  }\n\n  /**\n   * A focus handler to keep focus in the top-most modal.\n   */\n  private focusHandler = (event: FocusEvent) => {\n    const topModal = this.getTopModal();\n    const target = event.target as HTMLElement;\n\n    // if there is an open modal and valid focus event target...\n    if (topModal && target) {\n      const modalElement = topModal.modalRef;\n      if (\n        modalElement &&\n        !modalElement.contains(target) &&\n        !isLogicalAncestor(modalElement, target)\n      ) {\n        // Focus is outside of the top modal container, let's try to fix it\n        const tabbableElements = allTabbableElements(modalElement);\n        if (tabbableElements.length > 0) {\n          // re-directing focus to the element inside top modal\n          focusWithin(modalElement);\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n    }\n  };\n\n  /**\n   * Registers a modal with ModalManager\n   *\n   * @param modal\n   * @returns\n   */\n  push(modal: Modal) {\n    const modalIndex = this._findModalIndex(modal);\n\n    if (modalIndex !== -1) {\n      // Do not try to register the same modal multiple times\n      return;\n    }\n\n    this.modals.push(modal);\n\n    // if this is the first modal in the container, block container scrolling\n    if (this.modals.length === 1) {\n      const ownerDocument = this._getOwnerDocument(modal.modalRef);\n      const scrollContainer = ownerDocument.body;\n\n      const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n      if (scrollBarWidth > 1) {\n        // in RTL, scrollbar is on the left\n        const scrollBarLeft =\n          Math.round(document.documentElement.getBoundingClientRect().left) +\n          document.documentElement.scrollLeft;\n\n        if (scrollBarLeft) {\n          this.styleBackup.push({\n            property: 'padding-left',\n            value: scrollContainer.style.paddingLeft\n          });\n          scrollContainer.style.paddingLeft = `${scrollBarWidth}px`;\n        } else {\n          this.styleBackup.push({\n            property: 'padding-right',\n            value: scrollContainer.style.paddingRight\n          });\n          scrollContainer.style.paddingRight = `${scrollBarWidth}px`;\n        }\n      }\n\n      this.styleBackup.push({ property: 'overflow', value: scrollContainer.style.overflow });\n      this.styleBackup.push({ property: 'overflow-x', value: scrollContainer.style.overflowX });\n      this.styleBackup.push({ property: 'overflow-y', value: scrollContainer.style.overflowY });\n\n      scrollContainer.style.overflow = 'hidden';\n    }\n\n    // also install the focus handler when the first modal becomes active\n    if (this.modals.length === 1 && !this.islegacyLayerSupportAvailable()) {\n      document.addEventListener('focus', this.focusHandler, true);\n      this.isFocusHandlerActive = true;\n    }\n  }\n\n  /**\n   * Unegisters a modal from ModalManager\n   *\n   * @param modal\n   * @returns\n   */\n  pop(modal: Modal) {\n    const modalIndex = this._findModalIndex(modal);\n\n    if (modalIndex === -1) {\n      // modal to be removed not found!'\n      return;\n    }\n\n    if (modalIndex !== this.modals.length - 1) {\n      // trying to remove modal out of order!\n      return;\n    }\n\n    // remove the focus handler when the last modal is about to be removed\n    if (this.isFocusHandlerActive && this.modals.length === 1) {\n      document.removeEventListener('focus', this.focusHandler, true);\n    }\n\n    this.modals.pop();\n\n    // if this was the last modal in the container, restore its overflow props\n    if (this.modals.length === 0) {\n      const ownerDocument = this._getOwnerDocument(modal.modalRef);\n      const scrollContainer = ownerDocument.body;\n\n      this.styleBackup.forEach(({ property, value }) => {\n        scrollContainer.style.setProperty(property, value);\n      });\n    }\n  }\n\n  isTopModal(modal: Modal): boolean {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n  getTopModal = (): Modal | null => {\n    return this.modals.length > 0 ? this.modals[this.modals.length - 1] : null;\n  };\n\n  private _findModalIndex(modal: Modal): number {\n    let index = -1;\n    this.modals.forEach((elem, idx) => {\n      if (elem === modal) {\n        index = idx;\n        return;\n      }\n    });\n    return index;\n  }\n\n  private _getOwnerDocument(node: Node | null | undefined): Document {\n    return (node && node.ownerDocument) || document;\n  }\n\n  // TODO: replace with a proper API\n  /**\n   * Checks if the legacy popup service is available\n   */\n  private islegacyLayerSupportAvailable = () => {\n    return document.getElementById('__oj_zorder_container') !== null;\n  };\n}\n"],"names":["ModalBackdrop","forwardRef","variant","ref","variantClasses","multiVariantStyles","backdrop","_jsx","class","globalModalManager","constructor","this","isFocusHandlerActive","focusHandler","event","topModal","getTopModal","target","modalElement","modalRef","contains","isLogicalAncestor","allTabbableElements","length","focusWithin","preventDefault","stopPropagation","modals","islegacyLayerSupportAvailable","document","getElementById","styleBackup","push","modal","_findModalIndex","scrollContainer","_getOwnerDocument","body","scrollBarWidth","window","innerWidth","documentElement","clientWidth","Math","round","getBoundingClientRect","left","scrollLeft","property","value","style","paddingLeft","paddingRight","overflow","overflowX","overflowY","addEventListener","pop","modalIndex","removeEventListener","forEach","setProperty","isTopModal","index","elem","idx","node","ownerDocument","getSiblings","siblings","sibling","previousSibling","nodeType","nextSibling","resetAriaHiddenOnBackgroundElements","elements","removeAttribute","children","isOpen","onBackdropClick","backdropVariant","modalManager","backdropRef","useModal","useRef","ariaHiddenCache","getModal","current","useEffect","jsx","Layer","isModal","_jsxs","jsxs","baseStyle","onFocus","ariaHiddenElements","parentElement","tagName","toLowerCase","getAttribute","setAttribute","setAriaHiddenOnBackgroundElements"],"mappings":"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"}