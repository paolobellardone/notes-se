{"version":3,"file":"LabelValueLayout-6da5829a.js","sources":["../../src/UNSAFE_LabelValueLayout/LabelValueLayout.tsx"],"sourcesContent":["import { ComponentChildren, JSX } from 'preact';\n\nimport { classNames } from '#utils/UNSAFE_classNames';\nimport { useFormContext } from '#hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '#hooks/UNSAFE_useFormFieldContext';\nimport { sizeToCSS, Size } from '#utils/UNSAFE_size';\nimport { labelSlotStyles, labelInnerStyles } from './LabelValueLayoutStyles.css';\nimport { useComponentTheme } from '#hooks/UNSAFE_useComponentTheme';\nimport { TextFieldRedwoodTheme } from '#UNSAFE_TextField/themes/redwood/TextFieldTheme';\nimport { LabelRedwoodTheme } from '#UNSAFE_Label/themes/redwood/LabelTheme';\nimport { FormLayoutRedwoodTheme } from '#UNSAFE_TextField/themes/redwood/FormLayoutTheme';\nimport { StyledLabelValueLayout } from './StyledLabelValueLayout';\n\ntype TextFieldProps = {\n  /**\n   * Defines how the label is going to be positioned. For a TextField only the start and top values are allowed.\n   */\n  labelEdge?: 'start' | 'top';\n  /**\n   * Specifies if the parent component is a TextField or TextArea\n   */\n  parentComponentVariant?: 'textField' | 'textArea';\n};\n\ntype FormComponentWrapperProps = {\n  /**\n   * The start, top and inside values are supported for a wrapped component.\n   */\n  labelEdge?: 'start' | 'top' | 'inside';\n  /**\n   * Specifies if the parent component is a Form Component Wrapper\n   */\n  parentComponentVariant: 'formComponentWrapper';\n  /**\n   * Specifies if there is assistive text or links at the top of the component below the label\n   */\n  hasTopUserAssistance?: boolean;\n};\n\ntype Props = (TextFieldProps | FormComponentWrapperProps) & {\n  /**\n   * Label content of the layout\n   */\n  label?: ComponentChildren;\n  /**\n   * Defines the label width for labelEdge 'start' ('top' is always 100%)\n   */\n  labelStartWidth?: Size;\n  /**\n   * Value content of the layout\n   */\n  children: ComponentChildren;\n};\n\n/**\n * A layout component for rendering a label and value pair, used in form components\n * such as TextField, TextArea, and FormComponentWrapper.\n */\nexport const LabelValueLayout = ({\n  label,\n  labelEdge,\n  children,\n  labelStartWidth = '33%',\n  parentComponentVariant = 'textField',\n  ...rest\n}: Props) => {\n  const { baseTheme: textFieldTheme } = useComponentTheme(TextFieldRedwoodTheme);\n  const { baseTheme: labelTheme } = useComponentTheme(LabelRedwoodTheme);\n  const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n  const isTextField = parentComponentVariant.startsWith('text');\n  const isFormComponentWrapper = parentComponentVariant === 'formComponentWrapper';\n  const isStart = labelEdge === 'start';\n  const isTop = labelEdge === 'top' || labelEdge === 'inside'; // 'inside' needs to pick up all 'top' styles.\n  const isInside = labelEdge === 'inside';\n  const width = sizeToCSS(labelStartWidth);\n  const valueWidth = `calc(100% - ${width})`;\n  const hasTopUserAssistance = !!(rest as FormComponentWrapperProps).hasTopUserAssistance;\n\n  const labelStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: width, width: width, maxWidth: width }\n    : {};\n\n  const valueStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: valueWidth, width: valueWidth, maxWidth: valueWidth }\n    : {};\n\n  const { isFormLayout, isReadonly: isFormReadonly, labelWrapping } = useFormContext();\n  const { isReadonly } = useFormFieldContext();\n  const isPureReadonly = (isFormLayout && isFormReadonly) || (!isFormLayout && isReadonly);\n\n  const labelStyleClasses = classNames([\n    formLayoutTheme,\n    labelSlotStyles.base,\n    isStart && labelSlotStyles.start,\n    isTop && labelSlotStyles.top,\n    isTop && hasTopUserAssistance && labelSlotStyles.topAndTopUA,\n    isTop && isPureReadonly && labelSlotStyles.topPureReadonly\n  ]);\n\n  const labelInnerClasses = classNames([\n    isTextField && textFieldTheme,\n    isFormComponentWrapper && labelTheme,\n    formLayoutTheme,\n    labelInnerStyles.base,\n    isStart && labelInnerStyles.start,\n    isTextField && isStart && !isPureReadonly && labelInnerStyles.startNotPureReadonly,\n    isFormComponentWrapper && isInside && labelInnerStyles.insideFormComponentWrapper,\n\n    // Form Component Wrapper\n    isFormComponentWrapper &&\n      isStart &&\n      !isPureReadonly &&\n      !hasTopUserAssistance &&\n      labelInnerStyles.startWithoutTopFormComponentWrapperUA,\n    labelWrapping === 'truncate' && labelInnerStyles.noWrap\n  ]);\n\n  return (\n    <StyledLabelValueLayout\n      // For readonly start aligned labels, we want the div that is the parent of the label to\n      // stretch to the height of the value content, including the end content (InputSensitiveText)\n      flexAlign={isReadonly && isStart ? 'stretch' : 'start'}\n      labelStyleClasses={labelStyleClasses}\n      labelStyles={labelStyles}\n      labelInnerClasses={labelInnerClasses}\n      label={label}\n      valueStyles={valueStyles}>\n      {children}\n    </StyledLabelValueLayout>\n  );\n};\n"],"names":["label","labelEdge","children","labelStartWidth","parentComponentVariant","rest","baseTheme","textFieldTheme","useComponentTheme","TextFieldRedwoodTheme","labelTheme","LabelRedwoodTheme","formLayoutTheme","FormLayoutRedwoodTheme","isTextField","startsWith","isFormComponentWrapper","isStart","isTop","isInside","width","sizeToCSS","valueWidth","hasTopUserAssistance","labelStyles","flexBasis","maxWidth","valueStyles","isFormLayout","isReadonly","isFormReadonly","labelWrapping","useFormContext","useFormFieldContext","isPureReadonly","labelStyleClasses","classNames","labelSlotStyles","base","start","top","topAndTopUA","topPureReadonly","labelInnerClasses","labelInnerStyles","startNotPureReadonly","insideFormComponentWrapper","startWithoutTopFormComponentWrapperUA","noWrap","_jsx","StyledLabelValueLayout","flexAlign"],"mappings":"geA0DgC,EAC9BA,QACAC,YACAC,WACAC,kBAAkB,MAClBC,yBAAyB,eACtBC,MAEH,MAAQC,UAAWC,GAAmBC,EAAiBA,kBAACC,EAAqBA,wBACrEH,UAAWI,GAAeF,EAAiBA,kBAACG,EAAiBA,oBAC7DL,UAAWM,GAAoBJ,EAAiBA,kBAACK,EAAsBA,wBACzEC,EAAcV,EAAuBW,WAAW,QAChDC,EAAoD,yBAA3BZ,EACzBa,EAAwB,UAAdhB,EACViB,EAAsB,QAAdjB,GAAqC,WAAdA,EAC/BkB,EAAyB,WAAdlB,EACXmB,EAAQC,YAAUlB,GAClBmB,EAAa,eAAeF,KAC5BG,IAA0BlB,EAAmCkB,qBAE7DC,EAAiCP,EACnC,CAAEQ,UAAWL,EAAOA,MAAOA,EAAOM,SAAUN,GAC5C,GAEEO,EAAiCV,EACnC,CAAEQ,UAAWH,EAAYF,MAAOE,EAAYI,SAAUJ,GACtD,IAEEM,aAAEA,EAAcC,WAAYC,EAAcC,cAAEA,GAAkBC,EAAAA,kBAC9DH,WAAEA,GAAeI,EAAAA,sBACjBC,EAAkBN,GAAgBE,IAAqBF,GAAgBC,EAEvEM,EAAoBC,EAAAA,WAAW,CACnCxB,EACAyB,EAAAA,gBAAgBC,KAChBrB,GAAWoB,EAAeA,gBAACE,MAC3BrB,GAASmB,EAAeA,gBAACG,IACzBtB,GAASK,GAAwBc,EAAAA,gBAAgBI,YACjDvB,GAASgB,GAAkBG,EAAAA,gBAAgBK,kBAGvCC,EAAoBP,EAAAA,WAAW,CACnCtB,GAAeP,EACfS,GAA0BN,EAC1BE,EACAgC,EAAAA,iBAAiBN,KACjBrB,GAAW2B,EAAgBA,iBAACL,MAC5BzB,GAAeG,IAAYiB,GAAkBU,EAAgBA,iBAACC,qBAC9D7B,GAA0BG,GAAYyB,EAAAA,iBAAiBE,2BAGvD9B,GACEC,IACCiB,IACAX,GACDqB,EAAAA,iBAAiBG,sCACD,aAAlBhB,GAAgCa,EAAAA,iBAAiBI,SAGnD,OACEC,MAACC,EAAsBA,wBAGrBC,UAAWtB,GAAcZ,EAAU,UAAY,QAC/CkB,kBAAmBA,EACnBX,YAAaA,EACbmB,kBAAmBA,EACnB3C,MAAOA,EACP2B,YAAaA,EAAWzB,SACvBA,GAEH"}