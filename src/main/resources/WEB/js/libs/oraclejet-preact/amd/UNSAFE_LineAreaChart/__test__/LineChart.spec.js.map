{"version":3,"file":"LineChart.spec.js","sources":["../../../../src/UNSAFE_LineAreaChart/__test__/LineChart.spec.tsx"],"sourcesContent":["import { getByLabelText, getByText, render, waitFor, fireEvent } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { LineAreaChart } from '../LineAreaChart';\nimport { setupUseTextDimensionsDependenciesMock } from '../../../test/mocks/mockUseTextDimensionsDependencies';\nimport { ComponentProps } from 'preact/compat';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport userEvent from '@testing-library/user-event';\nimport { MenuItem } from '#UNSAFE_Menu';\nimport { queryAllBy, queryById } from '../../utils/PRIVATE_visTestUtils';\nimport { ChartContextMenuContext } from '#utils/UNSAFE_visTypes/chart/chart.types';\nimport { LineAreaItem } from '#UNSAFE_LineAreaChart/lineAreaChart.types';\n\ntype LineAreaChartProps = ComponentProps<typeof LineAreaChart>;\n\nconst series = [\n  {\n    name: 'Series 1',\n    id: 0,\n    items: [\n      {\n        id: 1,\n        value: 2,\n        accessibleLabel: 'item one'\n      },\n      {\n        id: 2,\n        value: 2,\n        accessibleLabel: 'item two'\n      }\n    ]\n  },\n  {\n    name: 'Series 2',\n    id: 1,\n    items: [\n      {\n        id: 3,\n        value: 3,\n        accessibleLabel: 'item three'\n      },\n      {\n        id: 4,\n        value: 4,\n        accessibleLabel: 'item four'\n      }\n    ]\n  }\n];\n\nconst defaultProps = {\n  series,\n  width: '400px',\n  height: '448px',\n  groups: [{ id: 'Group A' }, { id: 'Group B' }],\n  getDataItem: (i: number, j: number) => series[i].items[j]\n} as LineAreaChartProps;\n\nconst setupLineAreaChart = async (options?: Partial<LineAreaChartProps>) => {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  const env: Partial<RootEnvironment> = {\n    translations: { '@oracle/oraclejet-preact': translations }\n  };\n  const chartProps = { ...defaultProps, ...options };\n  const chart = <LineAreaChart {...chartProps} />;\n  return render(<RootEnvironmentProvider environment={env}>{chart}</RootEnvironmentProvider>);\n};\n\nexport function checkActiveItemGroupSeries(\n  chart: HTMLElement,\n  seriesIndex: string,\n  groupIndex: string\n) {\n  const activeDescendantId = chart.getAttribute('aria-activedescendant');\n  const activeElement = queryById(chart, activeDescendantId!);\n  expect(activeElement).not.null;\n  expect(activeElement?.getAttribute('data-oj-series-index')).to.equal(seriesIndex);\n  expect(activeElement?.getAttribute('data-oj-group-index')).to.equal(groupIndex);\n}\n\ndescribe('Test LineAreaChart component', () => {\n  beforeEach(() => {\n    setupUseTextDimensionsDependenciesMock(window);\n  });\n  it('renders chart with correct aria properties', async function () {\n    const content = await setupLineAreaChart({\n      'aria-labelledby': 'chartAriaLabelledBy',\n      'aria-label': 'chartAriaLabel'\n    });\n    // TODO: aria described by is overriden by datatip aria-decribedby currently\n    // add aria describedby after fixing it.\n    const chart = content.getByRole('application');\n    expect(chart).not.null;\n    expect(chart.getAttribute('aria-labelledby')).to.equal('chartAriaLabelledBy');\n    expect(chart.getAttribute('aria-label')).to.equal('chartAriaLabel');\n    expect(chart.getAttribute('tabIndex')).to.equal('0');\n  });\n\n  it('renders items with correct aria properties', async function () {\n    const content = await setupLineAreaChart();\n    const chart = content.getByRole('application');\n    // aria label is populated only after interaction.\n    await userEvent.tab();\n    const item = getByLabelText(chart, 'item one');\n    expect(item.getAttribute('data-oj-group-index')).to.equal('0');\n    expect(item.getAttribute('data-oj-series-index')).to.equal('0');\n    await userEvent.keyboard('[ARROWRIGHT]');\n    const selected = getByLabelText(chart, 'item two');\n    expect(selected.getAttribute('data-oj-group-index')).to.equal('1');\n    expect(selected.getAttribute('data-oj-series-index')).to.equal('0');\n  });\n\n  it('navigates to correct items', async function () {\n    const content = await setupLineAreaChart();\n    const chart = content.getByRole('application');\n    await userEvent.tab();\n    checkActiveItemGroupSeries(chart, '0', '0');\n    await userEvent.keyboard('[ARROWRIGHT]');\n    checkActiveItemGroupSeries(chart, '0', '1');\n    await userEvent.keyboard('[ARROWUP]');\n    checkActiveItemGroupSeries(chart, '1', '1');\n    await userEvent.keyboard('[ARROWLEFT]');\n    checkActiveItemGroupSeries(chart, '1', '0');\n  });\n\n  it('renders the selected items', async function () {\n    if (typeof jest == 'undefined') {\n      const content = await setupLineAreaChart({\n        selectionMode: 'multiple',\n        selectedIds: [1, 2]\n      });\n      const chart = content.getByRole('application');\n      const queryAllByDataObject = queryAllBy('data-oj-object');\n      const markers = queryAllByDataObject(chart, 'item');\n      expect(markers.length).to.equal(4);\n      const selectedItems = markers.filter(\n        (item) => item.getAttribute('data-oj-series-index') === '0'\n      );\n      expect(selectedItems.length).to.equal(2);\n      selectedItems.forEach((item) => {\n        const itemStyle = getComputedStyle(item);\n        expect(itemStyle.getPropertyValue('stroke')).to.equal('rgb(92, 86, 81)');\n        expect(itemStyle.getPropertyValue('stroke-width')).to.equal('1px');\n        expect(itemStyle.getPropertyValue('fill')).to.equal('rgb(255, 255, 255)');\n      });\n      const unselectedItems = markers.filter(\n        (item) => item.getAttribute('data-oj-series-index') != '0'\n      );\n      expect(unselectedItems.length).to.equal(2);\n      unselectedItems.forEach((item) => {\n        const itemStyle = getComputedStyle(item);\n        expect(itemStyle.getPropertyValue('stroke')).to.equal('rgba(255, 255, 255, 0)');\n        expect(itemStyle.getPropertyValue('stroke-width')).to.equal('1px');\n        expect(itemStyle.getPropertyValue('fill')).to.equal('rgba(255, 255, 255, 0)');\n      });\n    }\n  });\n\n  it('does not render the hidden ids', async function () {\n    const content = await setupLineAreaChart({\n      hiddenIds: [1, 2]\n    });\n    const chart = content.getByRole('application');\n    await userEvent.tab();\n    const queryAllByDataObject = queryAllBy('data-oj-object');\n    const markers = queryAllByDataObject(chart, 'item');\n    expect(markers.length).to.equal(2);\n    markers.forEach((item) => {\n      expect(item.getAttribute('data-oj-series-index')).not.equal('0');\n    });\n  });\n\n  it('triggers the item input on keyboard nav', async function () {\n    let sIndex: number | undefined;\n    let gIndex: number | undefined;\n    await setupLineAreaChart({\n      onItemFocus: ({ seriesIndex, groupIndex }) => {\n        sIndex = seriesIndex;\n        gIndex = groupIndex;\n      }\n    });\n    await userEvent.tab();\n    await waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(0);\n    });\n    await userEvent.keyboard('[ARROWRIGHT]');\n    await waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(1);\n    });\n    await userEvent.tab();\n    await waitFor(() => {\n      expect(sIndex).to.equal(undefined);\n      expect(gIndex).to.equal(undefined);\n    });\n  });\n\n  it('triggers the proper drill events', async function () {\n    let sIndex: number | undefined;\n    let gIndex: number | undefined;\n\n    await setupLineAreaChart({\n      drilling: 'on',\n      onItemDrill: (context) => {\n        sIndex = context.seriesIndex;\n        gIndex = context.groupIndex;\n      },\n      onGroupDrill: (context) => {\n        gIndex = context.groupIndex;\n        sIndex = undefined;\n      }\n    });\n\n    await userEvent.tab();\n    await userEvent.keyboard('[ENTER]');\n    await waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(0);\n    });\n\n    await userEvent.tab();\n    await userEvent.keyboard('[ENTER]');\n    await waitFor(() => {\n      expect(sIndex == undefined).to.be.true;\n      expect(gIndex).to.equal(0);\n    });\n  });\n\n  it('triggers datatip on hover', async function () {\n    if (typeof jest == 'undefined') {\n      const content = await setupLineAreaChart();\n      const chart = content.getByRole('application');\n      const queryAllByDataObject = queryAllBy('data-oj-object');\n      const markers = queryAllByDataObject(chart, 'item');\n      await userEvent.hover(markers[0]);\n\n      await waitFor(() => {\n        const targetElement = document.querySelector('[role=\"tooltip\"]') as HTMLElement;\n\n        let label = getByText(targetElement, 'Value');\n        let value = getByText(targetElement, '2');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n\n        label = getByText(targetElement, 'Series');\n        value = getByText(targetElement, 'Series 1');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n\n        label = getByText(targetElement, 'Group');\n        value = getByText(targetElement, 'Group A');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n      });\n    }\n  });\n\n  it('formats the axis labels', async function () {\n    const content = await setupLineAreaChart({\n      yAxis: {\n        tickLabel: {\n          format: (value) => {\n            return (value * 100).toString();\n          }\n        }\n      }\n    });\n\n    const chart = content.getByRole('application');\n    // TODO:JET-65258\n    // workaround for test issue JET-65258\n    // some dom are missing from chart if we do not add\n    // this await userEvent.tab() and hence tests to check\n    // dom will fail; maybe it's a delay issue.\n    await userEvent.tab();\n    expect(chart).to.be.not.null;\n    ['0', '50', '100', '150', '200', '250', '300', '350', '400'].forEach((i) => {\n      expect(getByText(chart, i)).to.be.not.null;\n    });\n  });\n\n  it('correctly navigates on horizontal linearea chart', async function () {\n    const content = await setupLineAreaChart({\n      orientation: 'horizontal'\n    });\n\n    const chart = content.getByRole('application');\n    await userEvent.tab();\n    checkActiveItemGroupSeries(chart, '0', '0');\n    await userEvent.keyboard('[ARROWDOWN]');\n    checkActiveItemGroupSeries(chart, '0', '1');\n    await userEvent.keyboard('[ARROWRIGHT]');\n    checkActiveItemGroupSeries(chart, '1', '1');\n    await userEvent.keyboard('[ARROWUP]');\n    checkActiveItemGroupSeries(chart, '1', '0');\n  });\n\n  it('formats the axis labels according to locale', async function () {\n    const options = {\n      getDataItem: (seriesIndex: number, groupIndex: number) => {\n        const item = series[seriesIndex].items[groupIndex];\n        return {\n          ...item,\n          value: item.value * 10000 // increase value to 10k range\n        };\n      }\n    };\n\n    const locale = 'vi';\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations },\n      user: { locale }\n    };\n    const chartProps = { ...defaultProps, ...options };\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        {<LineAreaChart {...chartProps} />}\n      </RootEnvironmentProvider>\n    );\n    const chart = content.getByRole('application');\n    // TODO:JET-65258\n    // workaround for test issue JET-65258\n    // some dom are missing from chart if we do not add\n    // this await userEvent.tab() and hence tests to check\n    // dom will fail; maybe it's a delay issue.\n    await userEvent.tab();\n    expect(chart).to.be.not.null;\n    // zero has no suffix as expected and in vi locale, there is space between number and unit suffix (legacy jet/ CDLR)\n    ['0', '5 N', '10 N', '15 N', '20 N', '25 N', '30 N', '35 N', '40 N'].forEach((i) => {\n      expect(getByText(chart, i)).to.be.not.null;\n    });\n  });\n});\n\ndescribe('LineArea context menu Context', () => {\n  beforeEach(() => {\n    setupUseTextDimensionsDependenciesMock(window);\n  });\n  it('ContextMenu Context', async () => {\n    let ctx;\n    let type;\n    const content = await setupLineAreaChart({\n      contextMenuConfig: {\n        itemsRenderer: (\n          context: ChartContextMenuContext<string | number, LineAreaItem<string | number>>\n        ) => {\n          ctx = context;\n          type = ctx.type;\n          return (\n            <>\n              <MenuItem label=\"MenuItem1\"></MenuItem>\n              <MenuItem label=\"MenuItem2\"></MenuItem>\n              <MenuItem label=\"MenuItem3\"></MenuItem>\n            </>\n          );\n        }\n      }\n    });\n    const root = content.container.firstElementChild?.firstElementChild as Element;\n    await userEvent.tab();\n    await userEvent.keyboard('[ENTER]');\n    fireEvent.keyDown(root, { key: 'F10', shiftKey: true });\n    expect(ctx).not.null;\n    expect(type).equals('item');\n  });\n});\n"],"names":["series","name","id","items","value","accessibleLabel","defaultProps","width","height","groups","getDataItem","i","j","setupLineAreaChart","async","options","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","env","chartProps","chart","_jsx","LineAreaChart","render","RootEnvironmentProvider","environment","children","checkActiveItemGroupSeries","seriesIndex","groupIndex","activeDescendantId","getAttribute","activeElement","queryById","expect","not","null","to","equal","describe","beforeEach","setupUseTextDimensionsDependenciesMock","window","it","getByRole","userEvent","tab","item","getByLabelText","keyboard","selected","jest","selectionMode","selectedIds","markers","queryAllBy","queryAllByDataObject","length","selectedItems","filter","forEach","itemStyle","getComputedStyle","getPropertyValue","unselectedItems","hiddenIds","sIndex","gIndex","onItemFocus","waitFor","undefined","drilling","onItemDrill","context","onGroupDrill","be","true","hover","targetElement","document","querySelector","label","getByText","yAxis","tickLabel","format","toString","orientation","__variableDynamicImportRuntime1__","user","ctx","type","content","contextMenuConfig","itemsRenderer","_jsxs","_Fragment","MenuItem","jsx","root","container","firstElementChild","fireEvent","keyDown","key","shiftKey","equals"],"mappings":"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"}